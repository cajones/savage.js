(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error("Cannot find module '"+o+"'")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
var Trait=require("./Trait"),Attribute=function(){Trait.apply(this,arguments)};Attribute.prototype=Trait.prototype,Attribute.Agility="agility",Attribute.Smarts="smarts",Attribute.Spirit="spirit",Attribute.Strength="strength",Attribute.Vigor="vigor",Attribute.isAttribute=function(t){if(t instanceof Attribute)return!0;var r=/^agility?$|^smarts?$|^spirit?$|^strength?$|^vigor?$/i;return r.test(t)},module.exports=Attribute;
},{"./Trait":20}],2:[function(require,module,exports){
var Collection=require("./Collection"),Trait=require("./Trait"),Rank=require("./Rank"),Attribute=require("./Attribute"),Formatters=require("./Formatters"),Character=function(t){this.name=t,this.rank=new Rank,this.pace=6,this.race=null,this[Attribute.Agility]=new Trait("d4"),this[Attribute.Smarts]=new Trait("d4"),this[Attribute.Spirit]=new Trait("d4"),this[Attribute.Strength]=new Trait("d4"),this[Attribute.Vigor]=new Trait("d4"),Object.defineProperty(this,"parry",{get:function(){return this.isUnskilled("Fighting")?2:2+this.skills.Fighting.effect/2}}),Object.defineProperty(this,"toughness",{get:function(){return 2+this.vigor.effect/2}}),Object.defineProperty(this,"charisma",{get:function(){return 0}}),this.skills=new Collection,this.edges=new Collection,this.hindrances=new Collection};Character.prototype.getAttributePoints=function(){var t=[this[Attribute.Agility],this[Attribute.Smarts],this[Attribute.Spirit],this[Attribute.Strength],this[Attribute.Vigor]];return t.reduce(function(t,r){return t+r.factor},0)},Character.prototype.getSkillPoints=function(){var t=this.skills.values(),r=t.reduce(function(t,r){return t+r.factor},t.length),e=t.map(function(t){return Math.max(t.factor-this[t.linkedAttribute].factor,0)}.bind(this)).reduce(function(t,r){return t+r},0);return r+e},Character.prototype.hasSkill=function(t){return"string"==typeof t&&(t={name:t}),!!this.skills[t.name]},Character.prototype.isUnskilled=function(t){return!this.skills.contains(t)},Character.prototype.learn=function(t){return this.hasSkill(t)?this.skills[t.name].increase():this.skills[t.name]=t,this},Character.prototype.toString=function(){return Formatters.defaultFormatter.call(this)},module.exports=Character;
},{"./Attribute":1,"./Collection":3,"./Formatters":8,"./Rank":11,"./Trait":20}],3:[function(require,module,exports){
var Collection=function(){Object.defineProperty(this,"length",{get:function(){return Object.keys(this).length}})};Collection.prototype={add:function(t,e){return this.contains(t)?!1:(1===arguments.length&&"object"==typeof t&&t.toString&&(e=t,t=e.toString()),this[t]=e,!0)},remove:function(t){return this.contains(t)?(delete this[t],!0):!1},contains:function(t){return"undefined"!=typeof this[t]||-1!=Object.keys(this).indexOf(t)},keys:function(){return Object.keys(this)},values:function(){return this.keys().map(function(t){return this[t]}.bind(this))},map:function(){return Array.prototype.map.apply(this.values(),arguments)},filter:function(){return Array.prototype.filter.apply(this.values(),arguments)},reduce:function(){return Array.prototype.reduce.apply(this.values(),arguments)},forEach:function(){return Array.prototype.forEach.apply(this.values(),arguments)}},module.exports=Collection;
},{}],4:[function(require,module,exports){
var Attribute=require("./Attribute"),Edge=require("./Edge");module.exports=[new Edge("Alertness",Edge.requires("N"),"+2 Notice","Background Edges"),new Edge("Ambidextrous",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"Ignore -2 penalty for using off-hand","Background Edges"),new Edge("Arcane Background",Edge.requires("N"),"Allows access to supernatural powers","Background Edges"),new Edge("Arcane Resistance",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"Armor 2 vs. magic, +2 to resist magic effects","Background Edges"),new Edge("Improved Arcane Resistance",[Edge.requires("N"),Edge.requires("Arcane Resistance")],"Armor 4 vs. magic, +4 to resist magic effects","Background Edges"),new Edge("Attractive",[Edge.requires("N"),Edge.requires(Attribute.Vigor,"d6")],"Charisma +2","Background Edges"),new Edge("Very Attractive",[Edge.requires("N"),Edge.requires("Attractive")],"Charisma +4","Background Edges"),new Edge("Berserk",[Edge.requires("N")],"Smarts roll or go Berserk after being wounded; +2 Fighting and Strength rolls, -2 Parry, +2 Toughness; Roll of 1on Fighting die hits random adjacent target","Background Edges"),new Edge("Brave",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d6")],"+2 to Fear tests","Background Edges"),new Edge("Brawny",[Edge.requires("N"),Edge.requires(Attribute.Strength,"d6"),Edge.requires(Attribute.Vigor,"d6")],"Toughness +1; load limit is 8xStr instead of 5xStr","Background Edges"),new Edge("Fast Healer",[Edge.requires("N"),Edge.requires(Attribute.Vigor,"d8")],"+2 to natural healing rolls","Background Edges"),new Edge("Fleet-Footed",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d6")],"+2 Pace, d10 running die instead of d6","Background Edges"),new Edge("Linguist",[Edge.requires("N"),Edge.requires(Attribute.Smarts,"d6")],"Begin play with a number of languages equal to Smarts; Smarts –2 to be understood in any language heard for a week","Background Edges"),new Edge("Luck",[Edge.requires("N")],"+1 Benny per session","Background Edges"),new Edge("Great Luck",[Edge.requires("N")],"+2 Benny per session","Background Edges"),new Edge("Noble",[Edge.requires("N")],"+2 Charisma; Character is noble born with status and wealth","Background Edges"),new Edge("Quick",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"Discard draw of 5 or less for new card","Background Edges"),new Edge("Rich",[Edge.requires("N")],"3x starting funds, $75K annual salary","Background Edges"),new Edge("Filty rich",[Edge.requires("N"),Edge.requires.either("Rich","Noble")],"5x starting funds, $250K annual salary","Background Edges"),new Edge("Block",[Edge.requires("S"),Edge.requires("Fighting","d8")],"Parry +1","Combat Edges"),new Edge("Improved Block",[Edge.requires("V"),Edge.requires("Block")],"Parry +2","Combat Edges"),new Edge("Brawler",[Edge.requires("N"),Edge.requires(Attribute.Strength,"d8")],"+2 to unarmed damage rolls","Combat Edges"),new Edge("Bruiser",[Edge.requires("S"),Edge.requires("Brawler")],"Bonus die to unarmed damage is d8 instead of d6","Combat Edges"),new Edge("Combat Reflexes",Edge.requires("S"),"+2 to recover from Shaken","Combat Edges"),new Edge("Counterattack",[Edge.requires("S"),Edge.requires("Fighting","d8")],"Receive free Fighting attack at –2 once per round when a foe fails a Fighting attack","Combat Edges"),new Edge("Improved Counterattack",[Edge.requires("V"),Edge.requires("Counterattack")],"As above but ignore the –2 penalty","Combat Edges"),new Edge("Dodge",[Edge.requires("S"),Edge.requires(Attribute.Agility,"d8")],"-1 to be hit with ranged attacks","Combat Edges"),new Edge("Improved Dodge",[Edge.requires("V"),Edge.requires("Dodge")],"-2 to be hit with ranged attacks","Combat Edges"),new Edge("Elan",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"+2 when spending a Benny on a Trait roll (including Soak rolls)","Combat Edges"),new Edge("Extraction",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"Ignore one foe’s free attack when withdrawing from melee with an Agility roll","Combat Edges"),new Edge("Improved Extraction",[Edge.requires("N"),Edge.requires("Extraction")],"As above. With a raise, no foes get their free melee attack.","Combat Edges"),new Edge("First Strike",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"May attack one foe who moves adjacent","Combat Edges"),new Edge("Improved First Strike",[Edge.requires("H"),Edge.requires("First Strike")],"May attack every foe who moves adjacent","Combat Edges"),new Edge("Florentine",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8"),Edge.requires("Fighting","d8")],"+1 vs foes with single weapon and no shield; ignore 1 point of gang up bonus","Combat Edges"),new Edge("Frenzy",[Edge.requires("S"),Edge.requires("Fighting","d10")],"1 extra Fighting attack at -2","Combat Edges"),new Edge("Improved Frenzy",[Edge.requires("V"),Edge.requires("Frenzy")],"1 extra Fighting attack","Combat Edges"),new Edge("Giant Killer",Edge.requires("V"),"+1d6 damage when attacking larger creatures","Combat Edges"),new Edge("Hard to Kill",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"Ignore would penalties for Vigor rolls made on the Knockout or Injury tables","Combat Edges"),new Edge("Harder to Kill",[Edge.requires("V"),Edge.requires(Attribute.Spirit,"d8")],"Ignore would penalties for Vigor rolls made on the Knockout or Injury tables","Combat Edges"),new Edge("Improvisational Fighter",[Edge.requires("S"),Edge.requires(Attribute.Smarts,"d6")],"Ignores the usual –1 penalty to attack and Parry for improvised weapons","Combat Edges"),new Edge("Killer Instinct",[Edge.requires("H")],"Wins tied opposed rolls, may reroll opposed skill die if it comes up a “1”","Combat Edges"),new Edge("Level Headed",[Edge.requires("S"),Edge.requires(Attribute.Smarts,"d8")]," Act on best of two cards in combat","Combat Edges"),new Edge("Improved Level Headed",[Edge.requires("S"),Edge.requires("Level Headed")]," Act on best of three cards in combat","Combat Edges"),new Edge("Marksman",Edge.requires("S"),"Aim maneuver (+2 Shooting) if hero does not move","Combat Edges"),new Edge("Martial Artist",[Edge.requires("N"),Edge.requires("Fighting","d6")],"Never considered unarmed, +d4 to unarmed damage rolls","Combat Edges"),new Edge("Improved Martial Artist",[Edge.requires("V"),Edge.requires("Martial Artist"),Edge.requires("Fighting","d10")],"+d6 to unarmed damage rolls","Combat Edges"),new Edge("Nerves of Steel",[Edge.requires("N"),Edge.requires(Attribute.Vigor,"d8")],"Ignore 1 point of wound penalties","Combat Edges"),new Edge("Improved Nerves of Steel",[Edge.requires("N"),Edge.requires("Nerves of Steel")]," Ignore 2 points of wound penalties","Combat Edges"),new Edge("No Mercy",Edge.requires("S"),"May spend bennies on damage rolls","Combat Edges"),new Edge("Quick Draw",Edge.requires("N"),"may draw weapon as a free action","Combat Edges"),new Edge("Rock and Roll!",[Edge.requires("S"),Edge.requires("Shooting","d8")],"Ignore full-auto penalty if shooter doesn’t move","Combat Edges"),new Edge("Steady Hands",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"Ignore unstable platform penalty","Combat Edges"),new Edge("Sweep",[Edge.requires("N"),Edge.requires(Attribute.Strength,"d8"),Edge.requires("Fighting","d8")],"Attack all adjacent foes at -2","Combat Edges"),new Edge("Improved Sweep",[Edge.requires("V"),Edge.requires("Sweep")],"Attack all adjacent foes","Combat Edges"),new Edge("Trademark  Weapon",[Edge.requires("N"),Edge.requires.either(Edge.requires("Fighting","d10"),Edge.requires("Shooting","d10"))],"+1 Fighting or Shooting with particular weapon","Combat Edges"),new Edge("Improved Trademark  Weapon",[Edge.requires("V"),Edge.requires("Trademark Weapon")],"+2 Fighting or Shooting with particular weapon","Combat Edges"),new Edge("Two-Fisted",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"May attack with a weapon in each hand without multi-action penalty.","Combat Edges"),new Edge("Command",[Edge.requires("N"),Edge.requires(Attribute.Smarts,"d8")],"+1 to troops recovering from Shaken","Leadership Edges"),new Edge("Command Presence",[Edge.requires("N"),Edge.requires("Command")],"Increase command radius to 10”","Leadership Edges"),new Edge("Fervor",[Edge.requires("V"),Edge.requires(Attribute.Spirit,"d8"),Edge.requires("Command")],"+1 melee damage to troops in command","Leadership Edges"),new Edge("Hold the Line!",[Edge.requires("S"),Edge.requires(Attribute.Spirit,"d8"),Edge.requires("Command")],"Troops have +1 toughness","Leadership Edges"),new Edge("Inspire",[Edge.requires("S"),Edge.requires("Command")],"+1 to Spirit rolls of all troops in command","Leadership Edges"),new Edge("Natural Leader",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8"),Edge.requires("Command")],"Leader may give bennies to troops in command","Leadership Edges"),new Edge("Leader of Men",[Edge.requires("V"),Edge.requires("Command")],"Roll a d10 as the Wild Die for subordinates’ group rolls","Leadership Edges"),new Edge("New Power",[Edge.requires("N"),Edge.requires("Arcane Background")],"Character gains one new power","Power Edges"),new Edge("Power Points",[Edge.requires("N"),Edge.requires("Arcane Background")],"+5 Power Points, once per rank only","Power Edges"),new Edge("Rapid Recharge",[Edge.requires("S"),Edge.requires(Attribute.Spirit,"d6"),Edge.requires("Arcane Background")],"Regain 1 Power Point every 30 minutes","Power Edges"),new Edge("Improved Rapid Recharge",[Edge.requires("V"),Edge.requires("Rapid Recharge")],"Regain 1 Power Point every 15 minutes","Power Edges"),new Edge("Soul Drain",[Edge.requires("S"),Edge.requires("Arcane Background"),Edge.requires("Knowledge (Arcana)","d10")],"Drain energy from your own soul to get more power points","Power Edges"),new Edge("Ace",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8")],"+2 to Boating, Driving, Piloting; may make soak rolls for vehicle at -2","Professional Edges"),new Edge("Acrobat",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8"),Edge.requires(Attribute.Strength,"d6")],"+2 to nimbleness-based Agility rolls; +1 Parry if unencumbered","Professional Edges"),new Edge("Adept",[Edge.requires("N"),Edge.requires("Arcane Background"),Edge.requires("Martial Artist"),Edge.requires("Faith","d8"),Edge.requires("Fighting","d8")],"Unarmed attack do Str+d4, always considered armed; Gain boost/lower trait, deflection, healing, smite, or speed as free action at each new Rank","Professional Edges"),new Edge("Assassin",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8"),Edge.requires("Climbing","d6"),Edge.requires("Fighting","d6"),Edge.requires("Stealth","d8")],"+2 damage against unaware foe","Professional Edges"),new Edge("Champion",[Edge.requires("N"),Edge.requires("Arcane Background"),Edge.requires(Attribute.Spirit,"d8"),Edge.requires(Attribute.Strength,"d6"),Edge.requires("Faith","d6"),Edge.requires("Fighting","d8")],"+2 damage vs good/evil source; +2 Toughness vs good/evil","Professional Edges"),new Edge("Gadgeteer",[Edge.requires("N"),Edge.requires("Arcane Background"),Edge.requires(Attribute.Smarts,"d8"),Edge.requires("Repair","d8"),Edge.requires("Weird Science","d8"),Edge.requires(/^Knowledge/,"d6",2)],"May “jury-rig” a device once per game session","Professional Edges"),new Edge("Holy/Unholy Warrior",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8"),Edge.requires("Faith","d6")],"Call upon your chosen deity to repulse good/evil creatures","Professional Edges"),new Edge("Investigator",[Edge.requires("N"),Edge.requires(Attribute.Smarts,"d8"),Edge.requires("Investigation","d8"),Edge.requires("Streetwise","d8")],"+2 Investigation and Streetwise","Professional Edges"),new Edge("Jack-of-all-Trades",[Edge.requires("N"),Edge.requires(Attribute.Smarts,"d10")],"No -2 for unskilled Smarts based attempts","Professional Edges"),new Edge("McGyver",[Edge.requires("N"),Edge.requires(Attribute.Smarts,"d6"),Edge.requires("Repair","d6"),Edge.requires("Notice","d8")],"Professional Edges"),new Edge("Mentalist",[Edge.requires("N"),Edge.requires("Arcane Background"),Edge.requires(Attribute.Smarts,"d8"),Edge.requires("Psionics","d6")],"+2 to any opposed Psionics roll","Professional Edges"),new Edge("Mr. Fix It",[Edge.requires("N"),Edge.requires("Arcane Background"),Edge.requires(Attribute.Smarts,"d10"),Edge.requires("Repair","d8"),Edge.requires("Weird Science","d8"),Edge.requires(/^Knowledge/,"d6",2)],"+2 to Repair rolls, 1/2 Repair time with raise","Professional Edges"),new Edge("Scholar",[Edge.requires("N"),Edge.requires.skills(/^Knowledge/,"d8",2)],"+2 to two different Knowledge skills","Professional Edges"),new Edge("Tactician",[Edge.requires("S"),Edge.requires(Attribute.Smarts,"d8"),Edge.requires("Knowledge (Battle)","d6"),Edge.requires("Command")],"Make a Knowledge (Battle) roll at the beginning of a fight to get an Action Card per success and raise; these may be given to any allies","Professional Edges"),new Edge("Thief",[Edge.requires("N"),Edge.requires(Attribute.Agility,"d8"),Edge.requires("Climbing","d6"),Edge.requires("Lockpicking","d6"),Edge.requires("Stealth","d8")],"+2 Climb, Lockpick, Stealth, or to disarm traps","Professional Edges"),new Edge("Wizard",[Edge.requires("N"),Edge.requires("Arcane Background"),Edge.requires(Attribute.Smarts,"d8"),Edge.requires("Knowledge (Arcanca)","d8"),Edge.requires("Spellcasting","d6")],"Each raise reduces cost of spell by 1 point","Professional Edges"),new Edge("Woodsman",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d6"),Edge.requires("Survival","d8"),Edge.requires("Tracking","d8")],"+2 Tracking Survival, and Stealth","Professional Edges"),new Edge("Charismatic",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"+2 Charisma","Social Edges"),new Edge("Common Bond",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"Can share bennies with other Wild Cards","Social Edges"),new Edge("Connections",Edge.requires("N"),"Call upon powerful friends","Social Edges"),new Edge("Strong Willed",[Edge.requires("N"),Edge.requires("Initimidation","d6")],"+2 Intimidation and Taunt, +2 to resist","Weird Edges"),new Edge("Beast Bond",Edge.requires("N"),"Character may spend bennies for his animals","Weird Edges"),new Edge("Beast Master",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"You gain an animal companion","Weird Edges"),new Edge("Danger Sense",Edge.requires("N"),"Notice at -2 to detect surprise attacks/danger","Weird Edges"),new Edge("Healer",[Edge.requires("N"),Edge.requires(Attribute.Spirit,"d8")],"+2 Healing","Weird Edges"),new Edge("Liquid Courage",[Edge.requires("N"),Edge.requires(Attribute.Vigor,"d8")],"increase Vigor when drunk; ignore 1 wound modifier","Weird Edges"),new Edge("Scavenger",[Edge.requires("N"),Edge.requires("Luck")],"can acquire an item once per session","Weird Edges"),new Edge("Dead Shot",[Edge.requires("S"),Edge.requires.either(Edge.requires("Shooting","d10"),Edge.requires("Shooting","d10"))],"Double ranged damage when dealt Joker","Wild Card Edges"),new Edge("Mighty Blow",[Edge.requires("S"),Edge.requires("Fighting","d10")],"Double melee damage when dealt Joker","Wild Card Edges"),new Edge("Power Surge",[Edge.requires("S"),Edge.requires("Arcane Background")],"+2d6 Power Points when dealt a Joker","Wild Card Edges"),new Edge("Followers",Edge.requires("L"),"Attract 5 henchmen","Wild Card Edges"),new Edge("Martial Arts Master",[Edge.requires("L"),Edge.requires("Fighting","d12")],"Trait becomes d12+1","Legendary Edges"),new Edge("Professional",[Edge.requires("L"),Edge.requires.skills(/./,"d12")],"Trait becomes d12+1","Legendary Edges"),new Edge("Expert",[Edge.requires("L"),Edge.requires("Professional")],"Trait becomes d12+2","Legendary Edges"),new Edge("Master",[Edge.requires("L"),Edge.requires("Master")],"Wild Die is d10 for one Trait","Legendary Edges"),new Edge("Sidekick",Edge.requires("L"),"Character gains a Novice WC sidekick","Legendary Edges"),new Edge("Tough as Nails",Edge.requires("L"),"Toughness +1","Legendary Edges"),new Edge("Improved Tough as Nails",[Edge.requires("L"),Edge.requires("Tough as Nails")],"Toughness +2","Legendary Edges"),new Edge("Weapon Master",[Edge.requires("L"),Edge.requires("Fighting","d12")],"Parry +1","Legendary Edges"),new Edge("Master of Arms",[Edge.requires("L"),Edge.requires("Weapon Master")],"Parry +2","Legendary Edges")];
},{"./Attribute":1,"./Edge":5}],5:[function(require,module,exports){
var Edge=function(e,r,t,i,n){Object.defineProperty(this,"name",{value:e}),Object.defineProperty(this,"requirements",{value:Array.isArray(r)?r:[r]}),Object.defineProperty(this,"effect",{value:t}),Object.defineProperty(this,"category",{value:i||"Edges"}),this.notes=n||""};Edge.prototype.isAvailableTo=function(e){return this.requirements.reduce(function(r,t){return r&&t.isMet(e)},!0)},Edge.prototype.toString=function(){return this.name},Edge.requires=function(){var e=require("./Skill"),r=require("./Attribute"),t=require("./Rank"),i=require("./Requirements/SkillRequirement"),n=require("./Requirements/AttributeRequirement"),u=require("./Requirements/RankRequirement"),s=require("./Requirements/EdgeRequirement");if(1===arguments.length){var q=arguments[0];return t.isRank(q)?new u(q):"object"==typeof q&&q instanceof e?new i(q):new s(q)}var a=arguments[0],o=arguments[1],m=arguments[2];return r.isAttribute(a)?new n(a,o):new i(a,o,m)},Edge.requires.either=function(e,r){var t=require("./Requirements/EitherRequirement"),i=require("./Requirements/EdgeRequirement");return"string"==typeof e&&(e=new i(r)),"string"==typeof r&&(r=new i(r)),new t(e,r)},Edge.requires.skills=function(e,r,t){var i=require("./Requirements/MultiSkillRequirement");return new i(r,e,t)},module.exports=Edge;
},{"./Attribute":1,"./Rank":11,"./Requirements/AttributeRequirement":12,"./Requirements/EdgeRequirement":13,"./Requirements/EitherRequirement":14,"./Requirements/MultiSkillRequirement":15,"./Requirements/RankRequirement":16,"./Requirements/SkillRequirement":17,"./Skill":19}],6:[function(require,module,exports){
var Collection=require("./Collection"),Edges=new Collection;Object.defineProperty(Edges,"extend",{enumerable:!1,value:function(e){if(Array.isArray(e))e.forEach(function(e){this.add(e.name,e)}.bind(this));else{if("object"!=typeof e)return;for(var r in e)e.hasOwnProperty(r)&&this.add(r.name,e[r])}return this}}),module.exports=Edges;
},{"./Collection":3}],7:[function(require,module,exports){
var MarkdownCharacterFormatter=function(){var n=this.name+"\n"+(this.race?this.race.toString()+" ":"")+this.rank.toString()+"\n===============================\nAgility "+this.agility.value+"\nSmarts "+this.smarts.value+"\nSpirit "+this.spirit.value+"\nStrength "+this.strength.value+"\nVigor "+this.vigor.value+"\n\nSkills\n------\n"+this.skills.reduce(function(n,t){return n+t.name+" "+t.value+"\n"},"")+"\nHindrances\n----------\n"+this.hindrances.reduce(function(n,t){return n+t.name+" ("+t.severity+")\n"},"")+"\nEdges\n-----\n"+this.edges.reduce(function(n,t){return n+t.name+"\n"},"");return n};module.exports=MarkdownCharacterFormatter;
},{}],8:[function(require,module,exports){
module.exports={defaultFormatter:require("./MarkdownCharacterFormatter"),MarkdownCharacterFormatter:require("./MarkdownCharacterFormatter")};
},{"./MarkdownCharacterFormatter":7}],9:[function(require,module,exports){
var Hindrance=function(n,e,r){Object.defineProperty(this,"name",{value:n}),Object.defineProperty(this,"effect",{value:r}),Object.defineProperty(this,"severity",{value:/^Major$/i.test(e)?"Major":"Minor"}),Object.defineProperty(this,"isMajor",{value:/^Major$/i.test(e)})};Hindrance.prototype.toString=function(){return this.name},Hindrance.AllThumbs=function(){return new Hindrance("All Thumbs","Minor","–2 Repair; Roll of 1 causes malfunction")},Hindrance.Anemic=function(){return new Hindrance("Anemic","Minor","–2 to Fatigue tests")},Hindrance.Arrogant=function(){return new Hindrance("Arrogant","Major","Must humiliate opponent, challenge the ‘leader’")},Hindrance.BadEyes=function(){return new Hindrance("Bad Eyes","Major","–2 to attack or notice something more than 5” distant")},Hindrance.SlightlyBadEyes=function(){return new Hindrance("Bad Eyes","Minor","Without corrective lens: –2 to attack or notice something more than 5” distant")},Hindrance.BadLuck=function(){return new Hindrance("Bad Luck","Major","One less Benny per session")},Hindrance.BigMouth=function(){return new Hindrance("Big Mouth","Minor","Unable to keep a secret, blabs at the worst time")},Hindrance.Blind=function(){return new Hindrance("Blind","Major","–6 to all actions that rely on vision; –2 on social rolls, gain additional Edge")},Hindrance.Bloodthirsty=function(){return new Hindrance("Bloodthirsty","Major","Never takes prisoner")},Hindrance.Cautious=function(){return new Hindrance("Cautious","Minor","Character is overly careful")},Hindrance.Clueless=function(){return new Hindrance("Clueless","Major","-2 to most Common Knowledge rolls")},Hindrance.CodeOfHonour=function(){return new Hindrance("Code of Honor","Major","Character keeps his word and acts like a gentleman")},Hindrance.DeathWish=function(){return new Hindrance("Death Wish","Major","Hero wants to die after completing some task")},Hindrance.Delusional=function(){return new Hindrance("Delusional","Major","Character suffers from grave delusions")},Hindrance.SlightlyDelusional=function(){return new Hindrance("Delusional","Minor","Character suffers from mild delusions")},Hindrance.DoubtingThomas=function(){return new Hindrance("Doubting Thomas","Minor","Character doesn’t believe in the supernatural")},Hindrance.Elderly=function(){return new Hindrance("Elderly","Major","Pace –1, –1 to Strength and Vigor die types; +5 skill points for any skill linked to Smarts")},Hindrance.Enemy=function(){return new Hindrance("Enemy","Major","Character has a recurring nemesis of some sort")},Hindrance.MinorEnemy=function(){return new Hindrance("Enemy","Minor","Character has a recurring nemesis of some sort")},Hindrance.Greedy=function(){return new Hindrance("Greedy","Major","Character is obsessed with wealth")},Hindrance.SlightlyGreedy=function(){return new Hindrance("Greedy","Minor","Character is inclined to obtain wealth")},Hindrance.Habit=function(){return new Hindrance("Habit","Major","Charisma –1; Fatigue rolls when deprived of Major Habits")},Hindrance.SlightHabit=function(){return new Hindrance("Habit","Minor","Charisma –1")},Hindrance.HardOfHearing=function(){return new Hindrance("Hard of Hearing","Major","–2 to Notice sounds; automatic failure if completely deaf")},Hindrance.SlightlyHardOfHearing=function(){return new Hindrance("Hard of Hearing"," Minor","–2 to Notice sounds; automatic failure if completely deaf")},Hindrance.Heroic=function(){return new Hindrance("Heroic","Major","Character always helps those in need")},Hindrance.Illiterate=function(){return new Hindrance("Illiterate","Minor","Hero is unable to read or write")},Hindrance.Lame=function(){return new Hindrance("Lame","Major","–2 Pace and running die is a d4")},Hindrance.Loyal=function(){return new Hindrance("Loyal","Minor","The hero tries to never betray or disappoint his friends")},Hindrance.Mean=function(){return new Hindrance("Mean","Minor","–2 to his Charisma for ill-temper and surliness")},Hindrance.Obese=function(){return new Hindrance("Obese","Minor","+1 Toughness, –1 Pace, d4 running die")},Hindrance.OneArm=function(){return new Hindrance("One Arm","Major","–4 to tasks requiring two arms")},Hindrance.OneEye=function(){return new Hindrance("One Eye","Major","-1 Charisma, –2 to rolls requiring depth perception")},Hindrance.OneLeg=function(){return new Hindrance("One Leg","Major","Pace –2, d4 running die, –2 to rolls requiring mobility, –2 to Swimming skill")},Hindrance.Outsider=function(){return new Hindrance("Outsider","Minor","-2 Charisma")},Hindrance.Overconfident=function(){return new Hindrance("Overconfident","Major","The hero believes he can do anything")},Hindrance.Pacifist=function(){return new Hindrance("Pacifist","Major","Won’t harm living creatures")},Hindrance.MinorPacifist=function(){return new Hindrance("Pacifist","Minor","Character fights only in self-defense")},Hindrance.Phobia=function(){return new Hindrance("Phobia","Major","–4 Trait tests when near the phobia")},Hindrance.SlightPhobia=function(){return new Hindrance("Phobia","Minor","–2 Trait tests when near the phobia")},Hindrance.Poverty=function(){return new Hindrance("Poverty","Minor","Half starting funds, inability to hang onto future income")},Hindrance.Quirk=function(){return new Hindrance("Quirk","Minor","Character has some minor but persistent foible")},Hindrance.Small=function(){return new Hindrance("Small","Major","–1 Toughness")},Hindrance.Stubborn=function(){return new Hindrance("Stubborn","Minor","Hero always wants his way")},Hindrance.Ugly=function(){return new Hindrance("Ugly","Minor","–2 Charisma due to appearance")},Hindrance.Vengeful=function(){return new Hindrance("Vengeful","Major","Character holds a grudge; will kill")},Hindrance.SlightlyVengeful=function(){return new Hindrance("Vengeful","Minor","Character holds a grudge")},Hindrance.Vow=function(){return new Hindrance("Vow","Major","A pledge to a group, deity, or religion")},Hindrance.MinorVow=function(){return new Hindrance("Vow","Minor","A pledge to a group, deity, or religion")},Hindrance.Wanted=function(){return new Hindrance("Wanted","Major","The character is a criminal of some sort")},Hindrance.SlightlyWanted=function(){return new Hindrance("Wanted","Minor","The character is a criminal of some sort")},Hindrance.Yellow=function(){return new Hindrance("Yellow","Major","The character is cowardly and suffers –2 to Fear checks")},Hindrance.Young=function(){return new Hindrance("Young","Major","Only 3 points for Attributes, 10 skill points, +1 Benny per session")},module.exports=Hindrance;
},{}],10:[function(require,module,exports){
var Race=function(e){this.name=e};Race.prototype.toString=function(){return this.name},Race.Human=new Race("Human"),module.exports=Race;
},{}],11:[function(require,module,exports){
var Rank=function(n){this.xp=parseInt(n)||0,Object.defineProperty(this,"name",{get:function(){return this.xp<20?"Novice":this.xp<40?"Seasoned":this.xp<60?"Veteran":this.xp<80?"Heroic":"Legendary"}})};Rank.prototype.increase=function(n){return this.xp+=Math.max(0,parseInt(n)),this},Rank.prototype.toString=function(){return this.name},Rank.Novice=Rank.N=function(){return new Rank(0)},Rank.Seasoned=Rank.S=function(){return new Rank(20)},Rank.Veteran=Rank.V=function(){return new Rank(40)},Rank.Heroic=Rank.H=function(){return new Rank(60)},Rank.Legendary=Rank.L=function(){return new Rank(80)},Rank.create=function(n){return this.isRank(n)?Rank[n].call():Rank.Novice()},Rank.isRank=function(n){if(n instanceof Rank)return!0;var e=/^N(ovice)?$|^S(easoned)?$|^V(eteran)?$|^H(eroic)?$|^L(egendary)?$/i;return e.test(n)},module.exports=Rank;
},{}],12:[function(require,module,exports){
var Trait=require("../Trait"),AttributeRequirement=function(t,e){this.attribute=t,this.value=new Trait(e)};AttributeRequirement.prototype.isMet=function(t){return t[this.attribute].factor>=this.value.factor},module.exports=AttributeRequirement;
},{"../Trait":20}],13:[function(require,module,exports){
var EdgeRequirement=function(e){this.edge=e};EdgeRequirement.prototype.isMet=function(e){return e.edges.contains(this.edge)},module.exports=EdgeRequirement;
},{}],14:[function(require,module,exports){
var EitherRequirement=function(e,t){this.first=e,this.second=t};EitherRequirement.prototype.isMet=function(e){return this.first.isMet(e)||this.second.isMet(e)},module.exports=EitherRequirement;
},{}],15:[function(require,module,exports){
var Trait=require("../Trait"),MultiSkillRequirement=function(t,i,e){this.quantity=void 0===e?1:parseInt(e),this.expression=i,this.trait=new Trait(t)};MultiSkillRequirement.prototype.isMet=function(t){return t.skills.filter(function(t){return console.log(t.name,this.expression.test(t.name),t.factor,this.trait.factor),this.expression.test(t.name)&&t.factor>=this.trait.factor}.bind(this)).length>=this.quantity},module.exports=MultiSkillRequirement;
},{"../Trait":20}],16:[function(require,module,exports){
var Rank=require("../Rank"),RankRequirement=function(e){this.rank="string"==typeof e?Rank.create(e):e};RankRequirement.prototype.isMet=function(e){return e.rank.xp>=this.rank.xp},module.exports=RankRequirement;
},{"../Rank":11}],17:[function(require,module,exports){
var Skill=require("../Skill"),SkillRequirement=function(l,i,e){this.skill="string"==typeof l&&arguments.length>=2?new Skill(i,l,e):l};SkillRequirement.prototype.isMet=function(l){return l.hasSkill(this.skill)&&l.skills[this.skill.name].factor>=this.skill.factor},module.exports=SkillRequirement;
},{"../Skill":19}],18:[function(require,module,exports){
!function(e,r){"function"==typeof define&&define.amd?define(function(){return e.Savage=r()}):"object"==typeof exports&&(module.exports=e.Savage=r()),"undefined"!=typeof window&&(window.Savage=e.Savage)}(this,function(){return{Character:require("./Character"),Attribute:require("./Attribute"),Skill:require("./Skill"),Race:require("./Race"),Rank:require("./Rank"),Hindrance:require("./Hindrance"),Edge:require("./Edge"),Edges:require("./Edges").extend(require("./CoreEdges"))}});
},{"./Attribute":1,"./Character":2,"./CoreEdges":4,"./Edge":5,"./Edges":6,"./Hindrance":9,"./Race":10,"./Rank":11,"./Skill":19}],19:[function(require,module,exports){
var Trait=require("./Trait"),Attribute=require("./Attribute"),Skill=function(t,i,n){Trait.apply(this,arguments),Object.defineProperty(this,"name",{value:i}),Object.defineProperty(this,"linkedAttribute",{value:n||Attribute.Smarts})};Skill.prototype=new Trait,Skill.prototype.toString=function(){return this.name},Skill.Boating=function(){return new Skill("d4","Boating",Attribute.Agility)},Skill.Driving=function(){return new Skill("d4","Driving",Attribute.Agility)},Skill.Fighting=function(){return new Skill("d4","Fighting",Attribute.Agility)},Skill.Lockpicking=function(){return new Skill("d4","Lockpicking",Attribute.Agility)},Skill.Piloting=function(){return new Skill("d4","Piloting",Attribute.Agility)},Skill.Riding=function(){return new Skill("d4","Riding",Attribute.Agility)},Skill.Shooting=function(){return new Skill("d4","Shooting",Attribute.Agility)},Skill.Stealth=function(){return new Skill("d4","Stealth",Attribute.Agility)},Skill.Swimming=function(){return new Skill("d4","Swimming",Attribute.Agility)},Skill.Throwing=function(){return new Skill("d4","Throwing",Attribute.Agility)},Skill.Gambling=function(){return new Skill("d4","Gambling",Attribute.Smarts)},Skill.Healing=function(){return new Skill("d4","Healing",Attribute.Smarts)},Skill.Investigation=function(){return new Skill("d4","Investigation",Attribute.Smarts)},Skill.Notice=function(){return new Skill("d4","Notice",Attribute.Smarts)},Skill.Repair=function(){return new Skill("d4","Repair",Attribute.Smarts)},Skill.Streetwise=function(){return new Skill("d4","Streetwise",Attribute.Smarts)},Skill.Survival=function(){return new Skill("d4","Survival",Attribute.Smarts)},Skill.Taunt=function(){return new Skill("d4","Taunt",Attribute.Smarts)},Skill.Tracking=function(){return new Skill("d4","Tracking",Attribute.Smarts)},Skill.Intimidation=function(){return new Skill("d4","Intimidation",Attribute.Spirit)},Skill.Persuasion=function(){return new Skill("d4","Persuasion",Attribute.Spirit)},Skill.Climbing=function(){return new Skill("d4","Climbing",Attribute.Strength)},module.exports=Skill;
},{"./Attribute":1,"./Trait":20}],20:[function(require,module,exports){
var scale=["d4","d6","d8","d10","d12","d12+1","d12+2","d12+3","d12+4"],Trait=function(t){var e=t?scale.indexOf(t):0;Object.defineProperty(this,"factor",{get:function(){return e},set:function(t){e=Math.max(0,Math.min(scale.length,t))}}),Object.defineProperty(this,"value",{get:function(){return scale[this.factor]}}),Object.defineProperty(this,"effect",{get:function(){return 2*this.factor+4}})};Trait.prototype.increase=function(){return scale[++this.factor]},Trait.prototype.increaseTo=Trait.prototype.decreaseTo=function(t){return scale.indexOf(t)>-1&&(this.factor=scale.indexOf(t)),this},Trait.prototype.decrease=function(){return scale[--this.factor]},Trait.prototype.toString=function(){return"[Trait "+this.value+"]"},module.exports=Trait;
},{}]},{},[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20])